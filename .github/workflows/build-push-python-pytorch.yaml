name: 'build and push python-pytorch'
on:
  push:
    branches:
    - main
    paths:
    - 'src/python-pytorch/**'
  workflow_dispatch:

env:
  DOCKERHUB_NAMESPACE: levizebulon
  DOCKERHUB_REPO: devcontainer
  WORKLOAD_TYPE: python-pytorch


jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      # git checkout code
      - name: Checkout
        uses: actions/checkout@v3

      # Set up QEMU, as it is a dependency for docker buildx.
      - name: Set up QEMU for multi-architecture builds
        uses: docker/setup-qemu-action@v3

      # Set up Docker buildx to facilitate the building of multi-platform images.
      - name: Setup Docker buildx for multi-architecture builds
        uses: docker/setup-buildx-action@v3

      # Use the git command to retrieve the current tag information and store it in the environment variable APP_VERSION.
      - name: Generate App Version
        run: echo APP_VERSION=`git describe --tags --always` >> $GITHUB_ENV

      # 登录 docker hub
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          # GitHub Repo => Settings => Secrets add Docker Hub login key information
          # DOCKERHUB_USERNAME is the Docker Hub username.
          # DOCKERHUB_TOKEN: docker hub => Account Setting => Security => New Access Token.
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Install @devcontainers/cli
        run: npm install -g @devcontainers/cli

      - name: Build image
        run: |
          devcontainer build \
            --workspace-folder ./src/${{ env.WORKLOAD_TYPE }} \
            --image-name=${{ env.DOCKERHUB_NAMESPACE }}/${{ env.DOCKERHUB_REPO }}:${{ env.WORKLOAD_TYPE }}-${{ env.APP_VERSION }} \
            --image-name=${{ env.DOCKERHUB_NAMESPACE }}/${{ env.DOCKERHUB_REPO }}:${{ env.WORKLOAD_TYPE }}-latest \
            --log-level trace \
            --output type=docker
          docker images
      - name: Publish image
        run: docker push --all-tags ${{ env.DOCKERHUB_NAMESPACE }}/${{ env.DOCKERHUB_REPO }}